{
  "name": "y-webrtc",
  "version": "10.3.0",
  "description": "WebRTC provider for Yjs",
  "type": "module",
  "main": "./dist/y-webrtc.cjs",
  "types": "./dist/src/y-webrtc.d.ts",
  "module": "./src/y-webrtc.js",
  "unpkg": "./src/y-webrtc.mjs",
  "sideEffects": false,
  "funding": {
    "type": "GitHub Sponsors ‚ù§",
    "url": "https://github.com/sponsors/dmonad"
  },
  "exports": {
    "module": "./src/y-webrtc.js",
    "import": "./src/y-webrtc.js",
    "require": "./dist/y-webrtc.cjs",
    "types": "./dist/src/y-webrtc.d.ts"
  },
  "scripts": {
    "clean": "rm -rf dist",
    "start": "node ./bin/server.js",
    "debug": "concurrently 'http-server -o index.html' 'npm run watch'",
    "demo": "concurrently 'http-server -o demo/index.html' 'npm run watch'",
    "dist": "rollup -c",
    "types": "tsc",
    "watch": "rollup -wc",
    "test": "npm run lint",
    "lint": "standard && tsc",
    "preversion": "npm run clean && npm run lint && npm run dist && npm run types",
    "docker:local:build": "docker compose -f docker-compose.yml build",
    "docker:local:up": "docker compose -f docker-compose.yml up -d",
    "docker:local:down": "docker compose -f docker-compose.yml down",
    "docker:build": "docker compose -f docker-compose.cloudflare.yml build",
    "docker:up": "docker compose -f docker-compose.cloudflare.yml up -d",
    "docker:down": "docker compose -f docker-compose.cloudflare.yml down",
    "docker:logs": "docker compose -f docker-compose.cloudflare.yml logs -f",
    "docker:ps": "docker compose -f docker-compose.cloudflare.yml ps",
    "docker:restart": "docker compose -f docker-compose.cloudflare.yml restart",
    "docker:clean": "docker compose -f docker-compose.cloudflare.yml down -v --rmi all",
    "tunnel:setup": "chmod +x ./scripts/run_ywebrtc_cloudflare_tunnel.sh",
    "tunnel:start": "bash -c 'source ./.env && ./scripts/run_ywebrtc_cloudflare_tunnel.sh \"${CLOUDFLARE_API_KEY}\" \"${HOST_DOMAIN}\"'",
    "tunnel:start:manual": "bash -c './scripts/run_ywebrtc_cloudflare_tunnel.sh \"$npm_config_apikey\" \"$npm_config_domain\"'",
    "deploy:full": "npm run docker:up && npm run tunnel:setup && npm run tunnel:start"
  },
  "bin": {
    "y-webrtc-signaling": "./bin/server.js"
  },
  "files": [
    "dist/*",
    "bin/*",
    "src/*"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yjs/y-webrtc.git"
  },
  "keywords": [
    "Yjs"
  ],
  "author": "Kevin Jahns <kevin.jahns@protonmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/yjs/y-webrtc/issues"
  },
  "homepage": "https://github.com/yjs/y-webrtc#readme",
  "standard": {
    "ignore": [
      "/dist",
      "/node_modules"
    ]
  },
  "dependencies": {
    "lib0": "^0.2.42",
    "simple-peer": "^9.11.0",
    "y-protocols": "^1.0.6"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^11.1.0",
    "@rollup/plugin-node-resolve": "^7.1.3",
    "@types/simple-peer": "^9.11.3",
    "concurrently": "^5.3.0",
    "http-server": "^0.12.3",
    "rollup": "^1.32.1",
    "rollup-cli": "^1.0.9",
    "rollup-plugin-terser": "^5.3.1",
    "standard": "^14.3.4",
    "typescript": "^4.4.4",
    "yjs": "^13.6.8"
  },
  "peerDependencies": {
    "yjs": "^13.6.8"
  },
  "optionalDependencies": {
    "ws": "^8.14.2"
  },
  "engines": {
    "node": ">=12"
  }
}